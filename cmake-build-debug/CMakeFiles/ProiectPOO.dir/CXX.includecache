#IncludeRegexLine: ^[ 	]*[#%][ 	]*(include|import)[ 	]*[<"]([^">]+)([">])

#IncludeRegexScan: ^.*$

#IncludeRegexComplain: ^$

#IncludeRegexTransform: 

C:/Users/tirzi/Desktop/ProiectPOO/common/api/BasicSpreadsheet.cpp
EvaluationContext.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/EvaluationContext.cpp
string
-
set
-

C:/Users/tirzi/Desktop/ProiectPOO/common/api/CellLocation.cpp
string
-
cassert
-

C:/Users/tirzi/Desktop/ProiectPOO/common/api/EvaluationContext.cpp
CellLocation.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/CellLocation.cpp

C:/Users/tirzi/Desktop/ProiectPOO/common/api/Expression.cpp
EvaluationContext.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/EvaluationContext.cpp
set
-

C:/Users/tirzi/Desktop/ProiectPOO/common/lexer/Token.cpp
../api/CellLocation.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/CellLocation.cpp
optional
-
cassert
-
vector
-
iostream
-

C:/Users/tirzi/Desktop/ProiectPOO/main.cpp
iostream
-
spreadsheet/Spreadsheet.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Spreadsheet.cpp

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/BinaryOp.cpp
../common/api/Expression.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/Expression.cpp
../common/lexer/Token.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/lexer/Token.cpp
cmath
-
set
-
utility
-

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Cell.cpp
utility
-
Parser.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Parser.cpp
../common/api/BasicSpreadsheet.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/BasicSpreadsheet.cpp

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/CellRef.cpp
../common/api/Expression.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/Expression.cpp
../common/lexer/Token.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/lexer/Token.cpp
set
-

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/CycleDetector.cpp
utility
-
../common/api/BasicSpreadsheet.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/BasicSpreadsheet.cpp

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Number.cpp
../common/api/Expression.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/Expression.cpp
../common/lexer/Token.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/lexer/Token.cpp
cmath
-
set
-

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Parser.cpp
../common/lexer/Token.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/lexer/Token.cpp
../common/api/Expression.cpp
C:/Users/tirzi/Desktop/ProiectPOO/common/api/Expression.cpp
Number.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Number.cpp
CellRef.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/CellRef.cpp
BinaryOp.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/BinaryOp.cpp
stack
-
string
-
vector
-
stdexcept
-

C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Spreadsheet.cpp
Cell.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/Cell.cpp
CycleDetector.cpp
C:/Users/tirzi/Desktop/ProiectPOO/spreadsheet/CycleDetector.cpp
map
-

